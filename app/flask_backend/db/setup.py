import psycopg2
from datetime import datetime
import argparse
import os

# This script is for testing or local purposes only
try:
    connection = psycopg2.connect(os.environ['DATABASE_URL'])

    cursor = connection.cursor()
    # Print PostgreSQL Connection properties
    print ( connection.get_dsn_parameters(),"\n")

    # Print PostgreSQL version
    cursor.execute("SELECT version();")
    record = cursor.fetchone()
    print("You are connected to - ", record,"\n")

    cursor.execute("CREATE TABLE public.account (\
	user_id serial NOT NULL,\
	hashed_password varchar(400) NOT NULL,\
	email varchar(355) NOT NULL,\
	first_name varchar NULL,\
	last_name varchar NULL,\
	pro varchar NULL,\
	CONSTRAINT account_email_key UNIQUE (email),\
	CONSTRAINT account_pkey PRIMARY KEY (user_id)\
    );")
    connection.commit()
    print('Created Accounts Table')

    dt = datetime.now()
    cursor.execute("INSERT INTO public.account \
    (user_id, hashed_password, email, first_name, last_name, pro) \
    VALUES(3, 'asdas', 'chen@socan.com', 'Chensa', 'Zhang23', 'SOCAN');", [dt])
    connection.commit()
    print('Loaded accounts data')

    cursor.execute('CREATE TABLE public.leads (\
	id varchar NOT NULL,\
	details jsonb NULL,\
	confidence varchar NULL,\
	date_added timestamp NULL,\
	revenue int4 NULL,\
	pro varchar NULL,\
	status varchar NULL,\
	year_added varchar NULL,\
	month_added varchar NULL,\
	generation_process text NULL,\
	"type" varchar NULL,\
	generated_id serial NOT NULL,\
    saved bool NULL,\
	CONSTRAINT leads_id_key UNIQUE (id),\
	CONSTRAINT leads_id_key1 UNIQUE (id),\
	CONSTRAINT leads_pkey PRIMARY KEY (generated_id)\
    );')
    connection.commit()
    print('Created Leads Table')

    dt = datetime.now()
    cursor.execute('INSERT INTO public.leads \
                    (id, details, confidence, date_added, revenue, pro, status, year_added, month_added, generation_process, "type", generated_id, saved) \
                    VALUES(\'ztZPNvEXiT6TbVsAaT\', \'{"id": "whoooo", "rank": 50, "start": "1:11", "title": "test2", "category": "", "entities": [{"name": "where", "type": "venue", "formatted_address": "100 lee"}], "location": [42, 4], "description": ""}\', \
                    \'Low\', \'2020-04-19 07:53:43.440\', NULL, \'SOCAN\', \'No Status\', \'2020\', \'4\', \'<ul><li>Event Category is in </li></ul>\', NULL, 73, true); \
                    ', [dt])
    connection.commit()
    print('Loaded leads data')

    cursor.execute("CREATE TABLE public.tweets (\
	id int8 NOT NULL GENERATED BY DEFAULT AS IDENTITY,\
	tweet varchar NULL,\
	date_created timestamp NULL,\
	lead_id varchar NULL\
    );")
    connection.commit()
    print('Created Tweets Table')

    dt = datetime.now()
    cursor.execute("INSERT INTO public.tweets \
                    (id, tweet, date_created, lead_id) \
                    VALUES(1238471290618609664, 'can wait for music', '2020-03-13 14:25:40.000', 'ztZPNvEXiT6TbVsAaT'); \
                    ", [dt])
    connection.commit()
    print('Loaded tweets data')


except (Exception, psycopg2.Error) as error :
    print ("Error while connecting to PostgreSQL", error)
finally:
    #closing database connection.
        if(connection):
            cursor.close()
            connection.close()
            print("PostgreSQL connection is closed")